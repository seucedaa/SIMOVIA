// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using SIMOVIA.Entities.Entities;

#nullable disable

namespace SIMOVIA.DataAccess.Context
{
    public partial class SIMOVIAContext : DbContext
    {
        public SIMOVIAContext()
        {
        }

        public SIMOVIAContext(DbContextOptions<SIMOVIAContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbColaboradores> tbColaboradores { get; set; }
        public virtual DbSet<tbColaboradoresPorSucursal> tbColaboradoresPorSucursal { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasPorRoles> tbPantallasPorRoles { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbTransportistas> tbTransportistas { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<tbViajesDetalle> tbViajesDetalle { get; set; }
        public virtual DbSet<tbViajesEncabezado> tbViajesEncabezado { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.carg_Id)
                    .HasName("PK__tbCargos__7299C3E6D9792254");

                entity.ToTable("tbCargos", "Gral");

                entity.HasIndex(e => e.carg_Descripcion, "UQ__tbCargos__F3099AE0910AE0A6")
                    .IsUnique();

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.carg_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.carg_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.carg_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.carg_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbCargos)
                    .HasForeignKey(d => d.carg_UsuarioModificacion);
            });

            modelBuilder.Entity<tbColaboradores>(entity =>
            {
                entity.HasKey(e => e.cola_Id)
                    .HasName("PK__tbColabo__2F360EA463D4E3DF");

                entity.ToTable("tbColaboradores", "Gral");

                entity.HasIndex(e => e.cola_CorreoElectronico, "UQ__tbColabo__2352DC0F1EE9A061")
                    .IsUnique();

                entity.HasIndex(e => e.cola_DNI, "UQ__tbColabo__8FF1FECD1C20DBED")
                    .IsUnique();

                entity.Property(e => e.cola_Apellidos)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.cola_CorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.cola_DNI)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.cola_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.cola_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.cola_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.cola_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.cola_Nombres)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.cola_ObservacionActivar).IsUnicode(false);

                entity.Property(e => e.cola_ObservacionInactivar).IsUnicode(false);

                entity.Property(e => e.cola_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.cola_Telefono)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.HasOne(d => d.carg)
                    .WithMany(p => p.tbColaboradores)
                    .HasForeignKey(d => d.carg_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.civi)
                    .WithMany(p => p.tbColaboradores)
                    .HasForeignKey(d => d.civi_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.cola_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbColaboradores)
                    .HasForeignKey(d => d.cola_UsuarioModificacion);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbColaboradores)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbColaboradoresPorSucursal>(entity =>
            {
                entity.HasKey(e => e.cosu_Id)
                    .HasName("PK__tbColabo__F292635C95F45237");

                entity.ToTable("tbColaboradoresPorSucursal", "Viaj");

                entity.HasOne(d => d.cola)
                    .WithMany(p => p.tbColaboradoresPorSucursal)
                    .HasForeignKey(d => d.cola_Id)
                    .HasConstraintName("FK_tbColaboradoresPorSucursal_Gral_tbColaboradores_cola_Id");

                entity.HasOne(d => d.sucu)
                    .WithMany(p => p.tbColaboradoresPorSucursal)
                    .HasForeignKey(d => d.sucu_Id);
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.depa_Id)
                    .HasName("PK__tbDepart__E3F3B11E770FE52B");

                entity.ToTable("tbDepartamentos", "Gral");

                entity.HasIndex(e => e.depa_Codigo, "UQ__tbDepart__CCD74A0406AFB4F1")
                    .IsUnique();

                entity.HasIndex(e => e.depa_Descripcion, "UQ__tbDepart__D4C3984064FADF28")
                    .IsUnique();

                entity.Property(e => e.depa_Codigo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.depa_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.depa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.depa_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.depa_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbDepartamentos)
                    .HasForeignKey(d => d.depa_UsuarioModificacion);
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.civi_Id)
                    .HasName("PK__tbEstado__748BC9DCEE36C4B2");

                entity.ToTable("tbEstadosCiviles", "Gral");

                entity.HasIndex(e => e.civi_Descripcion, "UQ__tbEstado__72B5BE69BD1D1B5F")
                    .IsUnique();

                entity.Property(e => e.civi_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.civi_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.civi_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.civi_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.civi_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEstadosCiviles)
                    .HasForeignKey(d => d.civi_UsuarioModificacion);
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.muni_Id)
                    .HasName("PK__tbMunici__CF2E09519D310362");

                entity.ToTable("tbMunicipios", "Gral");

                entity.HasIndex(e => e.muni_Codigo, "UQ__tbMunici__3C7692E1B8B7DAE8")
                    .IsUnique();

                entity.HasIndex(e => e.muni_Descripcion, "UQ__tbMunici__B1EE4BBB3C25F6F8")
                    .IsUnique();

                entity.Property(e => e.muni_Codigo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.muni_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.muni_FechaModificiacion).HasColumnType("datetime");

                entity.HasOne(d => d.depa)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.depa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.muni_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.muni_UsuarioModificacion);
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.pant_Id)
                    .HasName("PK__tbPantal__64687FD2630EA690");

                entity.ToTable("tbPantallas", "Acce");

                entity.Property(e => e.pant_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.pant_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pant_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.pant_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.pant_direccionURL).IsUnicode(false);

                entity.HasOne(d => d.pant_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPantallaspant_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.pant_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.pant_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbPantallaspant_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.pant_UsuarioModificacion);
            });

            modelBuilder.Entity<tbPantallasPorRoles>(entity =>
            {
                entity.HasKey(e => e.paro_Id)
                    .HasName("PK__tbPantal__14773954E25F1F4D");

                entity.ToTable("tbPantallasPorRoles", "Acce");

                entity.HasOne(d => d.pant)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.pant_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.role_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.role_Id)
                    .HasName("PK__tbRoles__760F99A42BC3041D");

                entity.ToTable("tbRoles", "Acce");

                entity.HasIndex(e => e.role_Descripcion, "UQ__tbRoles__624B9AAC59F98DFF")
                    .IsUnique();

                entity.Property(e => e.role_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.role_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.role_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.role_FechaModificiacion).HasColumnType("datetime");

                entity.HasOne(d => d.role_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbRoles)
                    .HasForeignKey(d => d.role_UsuarioModificacion);
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.sucu_Id)
                    .HasName("PK__tbSucurs__770A2A0200E178D8");

                entity.ToTable("tbSucursales", "Viaj");

                entity.HasIndex(e => e.sucu_Descripcion, "UQ__tbSucurs__7C540A19BF8B3244")
                    .IsUnique();

                entity.Property(e => e.sucu_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.sucu_Direccion)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.Property(e => e.sucu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.sucu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_Telefono)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbSucursales_Gral_tbMunicipios_muni_Id");

                entity.HasOne(d => d.sucu_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbSucursalessucu_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.sucu_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbSucursales_Acce_tbUsuarios_sucu_UsuarioCreacion");

                entity.HasOne(d => d.sucu_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbSucursalessucu_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.sucu_UsuarioModificacion)
                    .HasConstraintName("FK_tbSucursales_Acce_tbUsuarios_sucu_UsuarioModificacion");
            });

            modelBuilder.Entity<tbTransportistas>(entity =>
            {
                entity.HasKey(e => e.tran_Id)
                    .HasName("PK__tbTransp__A6709E2817A744C4");

                entity.ToTable("tbTransportistas", "Viaj");

                entity.Property(e => e.tran_Apellido)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.tran_DNI)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.tran_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.tran_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tran_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tran_Nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.tran_Tarifa).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.tran_Telefono)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.HasOne(d => d.tran_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTransportistastran_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.tran_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbTransportistas_Acce_tbUsuarios_tran_UsuarioCreacion");

                entity.HasOne(d => d.tran_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbTransportistastran_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.tran_UsuarioModificacion)
                    .HasConstraintName("FK_tbTransportistas_Acce_tbUsuarios_tran_UsuarioModificacion");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.usua_Id)
                    .HasName("PK__tbUsuari__EA3EC7A273B37ED3");

                entity.ToTable("tbUsuarios", "Acce");

                entity.Property(e => e.usua_Clave)
                    .IsRequired()
                    .HasMaxLength(64)
                    .IsFixedLength(true);

                entity.Property(e => e.usua_CodigoReestablecer)
                    .HasMaxLength(6)
                    .IsUnicode(false);

                entity.Property(e => e.usua_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.usua_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.usua_ObservacionActivar).IsUnicode(false);

                entity.Property(e => e.usua_ObservacionInactivar).IsUnicode(false);

                entity.Property(e => e.usua_Usuario)
                    .IsRequired()
                    .HasMaxLength(80)
                    .IsUnicode(false);

                entity.HasOne(d => d.cola)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.cola_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbUsuarios_Gral_tbColaboradores_cola_Id");

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.role_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.Inverseusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion);
            });

            modelBuilder.Entity<tbViajesDetalle>(entity =>
            {
                entity.HasKey(e => e.vide_Id)
                    .HasName("PK__tbViajes__08D033CD31CB6759");

                entity.ToTable("tbViajesDetalle", "Viaj");

                entity.HasOne(d => d.cola)
                    .WithMany(p => p.tbViajesDetalle)
                    .HasForeignKey(d => d.cola_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbVentasDetalle_tbColaboradores_cola_Id");

                entity.HasOne(d => d.vien)
                    .WithMany(p => p.tbViajesDetalle)
                    .HasForeignKey(d => d.vien_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbVentasDetalle_tbViajesEncabezado_vien_Id");
            });

            modelBuilder.Entity<tbViajesEncabezado>(entity =>
            {
                entity.HasKey(e => e.vien_Id)
                    .HasName("PK__tbViajes__C96264C41EFD5F62");

                entity.ToTable("tbViajesEncabezado", "Viaj");

                entity.Property(e => e.vien_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.vien_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.vien_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.vien_TarifaTransportista).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.vien_Total).HasColumnType("decimal(10, 2)");

                entity.HasOne(d => d.sucu)
                    .WithMany(p => p.tbViajesEncabezado)
                    .HasForeignKey(d => d.sucu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.tran)
                    .WithMany(p => p.tbViajesEncabezado)
                    .HasForeignKey(d => d.tran_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.vien_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbViajesEncabezadovien_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.vien_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tbViajesEncabezado_tbUsuarios_vie_UsuarioCreacion");

                entity.HasOne(d => d.vien_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbViajesEncabezadovien_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.vien_UsuarioModificacion);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}